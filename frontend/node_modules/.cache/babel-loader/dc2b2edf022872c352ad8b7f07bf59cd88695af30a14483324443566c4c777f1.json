{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('API Response Error:', error);\n  if (error.response) {\n    var _error$response$data;\n    // Server responded with error status\n    const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Server error occurred';\n    throw new Error(message);\n  } else if (error.request) {\n    // Request was made but no response received\n    throw new Error('No response from server. Please check your connection.');\n  } else {\n    // Something else happened\n    throw new Error('Request failed. Please try again.');\n  }\n});\n\n// Chat API\nexport const sendMessage = async data => {\n  return api.post('/api/chat', data);\n};\nexport const getChatHistory = async sessionId => {\n  const response = await api.get(`/api/chat/history/${sessionId}`);\n  return response.history || [];\n};\nexport const clearChatHistory = async sessionId => {\n  return api.delete(`/api/chat/history/${sessionId}`);\n};\n\n// Cases API\nexport const getCases = async () => {\n  return api.get('/api/cases');\n};\nexport const getCaseContent = async caseName => {\n  return api.get(`/api/cases/${caseName}`);\n};\nexport const searchCases = async (query, limit = 5) => {\n  return api.post('/api/search', {\n    query,\n    limit\n  });\n};\n\n// Health check\nexport const checkHealth = async () => {\n  return api.get('/health');\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response$data","message","Error","sendMessage","post","getChatHistory","sessionId","get","history","clearChatHistory","delete","getCases","getCaseContent","caseName","searchCases","query","limit","checkHealth"],"sources":["C:/Users/mariy/AI-Sherlock-Holmes/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    console.error('API Response Error:', error);\r\n    \r\n    if (error.response) {\r\n      // Server responded with error status\r\n      const message = error.response.data?.error || 'Server error occurred';\r\n      throw new Error(message);\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      // Something else happened\r\n      throw new Error('Request failed. Please try again.');\r\n    }\r\n  }\r\n);\r\n\r\n// Chat API\r\nexport const sendMessage = async (data) => {\r\n  return api.post('/api/chat', data);\r\n};\r\n\r\nexport const getChatHistory = async (sessionId) => {\r\n  const response = await api.get(`/api/chat/history/${sessionId}`);\r\n  return response.history || [];\r\n};\r\n\r\nexport const clearChatHistory = async (sessionId) => {\r\n  return api.delete(`/api/chat/history/${sessionId}`);\r\n};\r\n\r\n// Cases API\r\nexport const getCases = async () => {\r\n  return api.get('/api/cases');\r\n};\r\n\r\nexport const getCaseContent = async (caseName) => {\r\n  return api.get(`/api/cases/${caseName}`);\r\n};\r\n\r\nexport const searchCases = async (query, limit = 5) => {\r\n  return api.post('/api/search', { query, limit });\r\n};\r\n\r\n// Health check\r\nexport const checkHealth = async () => {\r\n  return api.get('/health');\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}